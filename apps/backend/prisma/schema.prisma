// ---------------------------------------------------------
// PRISMA SCHEMA - TodoApp Roll v3.0
// ---------------------------------------------------------

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------------------------------------------------------
// USER
// ---------------------------------------------------------
model User {
  id        String   @id @default(cuid())
  username  String   @unique
  passHash  String
  createdAt DateTime @default(now())

  tasks     Task[]
  media     Media[]
  alarms    Alarm[]
  history   History[]
}

// ---------------------------------------------------------
// TASK
// ---------------------------------------------------------
model Task {
  id          String   @id @default(cuid())
  userId      String
  title       String
  description String?
  status      String   @default("pending")
  priority    String   @default("medium")
  alarmId     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user  User  @relation(fields: [userId], references: [id])
  alarm Alarm? @relation("TaskAlarm", fields: [alarmId], references: [id])

  @@index([userId, status])
  @@index([userId, createdAt])
}

// ---------------------------------------------------------
// MEDIA
// ---------------------------------------------------------
model Media {
  id          String   @id @default(cuid())
  userId      String
  name        String
  url         String
  publicId    String
  type        String
  durationSec Int?
  width       Int?
  height      Int?
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  alarmsAsAudio Alarm[] @relation("AlarmAudio")
  alarmsAsImage Alarm[] @relation("AlarmImage")
}

// ---------------------------------------------------------
// ALARM
// ---------------------------------------------------------
model Alarm {
  id         String   @id @default(cuid())
  userId     String
  name       String
  audioId    String?
  imageId    String?
  scheduleAt DateTime?
  cronExpr   String?
  snoozeMins Int?     @default(5)
  enabled    Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user  User   @relation(fields: [userId], references: [id])
  audio Media? @relation("AlarmAudio", fields: [audioId], references: [id])
  image Media? @relation("AlarmImage", fields: [imageId], references: [id])
  tasks Task[] @relation("TaskAlarm")
}

// ---------------------------------------------------------
// HISTORY
// ---------------------------------------------------------
model History {
  id          String   @id @default(cuid())
  userId      String
  entity      String
  action      String
  payloadJson String
  category    String?
  createdAt   DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}